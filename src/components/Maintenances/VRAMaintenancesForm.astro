---
import Form from "@form/Form.astro";
import FormInput from "@form/FormInput.astro";
import FormSelect from "@form/FormSelect.astro";
import SelectOption from "@form/SelectOption.astro";
import { generateRandomNumber } from "@functions/generateRandomNumber";
import { convertEmployeesDataToJSON, convertVRASDataToJSON, convertReportedIssuesDataToJSON } from "@functions/ConvertDataToJSON"
import { getStatus } from "@functions/getStatus"
import { turso } from "src/turso";

interface Props {
  selectedMaintenance?: any;
}

const { selectedMaintenance } = Astro.props;
let generatedCardNumber = "";
let statusWTOSelectedStatus
const urgencyLevels = [
  { id: 1, name: "Critico" },
  { id: 2, name: "Moderado" },
  { id: 3, name: "Leve" },
]

const employees = await turso.execute(`SELECT curpID, employeeID, CONCAT(firstname, " ", paternalLastName)  FROM EMPLOYEES`);
const reportedIssues = await turso.execute("SELECT * FROM ReportedIssues")
const VRASNoMaintenance = await turso.execute("SELECT * FROM VRASNoMaintenance;")

let employeesData = convertEmployeesDataToJSON(employees?.toJSON())
let VRASData = convertVRASDataToJSON(VRASNoMaintenance?.toJSON())
let reportedIssuesData = convertReportedIssuesDataToJSON(reportedIssues?.toJSON())

if (!selectedMaintenance) {
  generatedCardNumber = generateRandomNumber(15)
}
else {
  statusWTOSelectedStatus = getStatus(selectedMaintenance.status);
  //result = convertCustomersDataToJSON(data).filter((p) => p.customerID !== selectedMaintenance.customerID);
}
---

<Form title="VRA Maintenance">
  {
    !selectedMaintenance
    ?
      <div class="flex flex-wrap gap-4">
        <FormInput name="vraMaintenanceID" type="number" value={generatedCardNumber} placeholder={generatedCardNumber} isRequired>
          Maintenance ID
        </FormInput>
        <FormInput name="maintenanceDate" type="date" isRequired>
          Maintenance Date
        </FormInput>
        <FormInput name="maintenanceTime" type="time" isRequired>
          Maintenance Time
        </FormInput>
      </div>
      <FormInput name="osbservations" type="text" isRequired>
        Observations
      </FormInput>

      <h3 class="text-xl dark:text-white  font-semibold mb-4">Maintenance Details</h3>
      
      <div class="flex flex-wrap gap-4">
        <FormSelect name="urgencyLevelID" title="Urgency Level" isRequired>
          <SelectOption value="" isSelected>--Select---</SelectOption>
          {
            urgencyLevels.map((ugl) => (
              <SelectOption value={ugl.id.toString()} >{ugl.name}</SelectOption>
            ))
          }
        </FormSelect>
        <FormSelect name="serialNumbID" title="VR accessory" isRequired>
          <SelectOption value="" isSelected>--Select---</SelectOption>
          {
            VRASData.map((vra) => (
              <SelectOption value={vra.serialNumbID.toString()} >{vra.model}</SelectOption>
            ))
          }
        </FormSelect>
        <FormSelect name="issueID" title="Issue" isRequired>
          <SelectOption value="" isSelected>--Select---</SelectOption>
          {
            reportedIssuesData.map((issue) => (
              <SelectOption value={issue.reportedIssueID.toString()} >{issue.reportedIssue}</SelectOption>
            ))
          }
        </FormSelect>
      </div>
      
      <h3 class="text-xl dark:text-white  font-semibold mb-4">Employee Information</h3>
      
      <div class="flex flex-wrap gap-4">
        <FormSelect name="empCURP" isRequired title="Employee">
          <SelectOption value="" isSelected>--Select---</SelectOption>
          {
            employeesData?.map((emp) => (
              <SelectOption value={emp.curpID.toString()}>{emp.fullName}</SelectOption>
            ))
          }
        </FormSelect>
      </div>
      <slot/>
    :
      <div class="flex flex-wrap gap-4">
        <FormInput name="vraMaintenanceID" type="number" value={selectedMaintenance.vraMaintenanceID} placeholder={generatedCardNumber} isDisabled>
          Maintenance ID
        </FormInput>
        <FormInput value={selectedMaintenance.maintenanceDate} name="maintenanceDate" type="date" isDisabled>
          Maintenance Date
        </FormInput>
        <FormInput name="maintenanceTime" type="time" isDisabled value={selectedMaintenance.maintenanceTime}>
          Maintenance Time
        </FormInput>
      </div>
      <FormInput name="osbservations" type="text" isDisabled value={selectedMaintenance.maintenanceObservations}>
        Observations
      </FormInput>

      <h3 class="text-xl dark:text-white  font-semibold mb-4">Maintenance Details</h3>
      
      <div class="flex flex-wrap gap-4">
        <FormSelect name="urgencyLevelID" title="Urgency Level" isDisabled>
          <SelectOption value="" isSelected>{selectedMaintenance.urgencyLevel}</SelectOption>
        </FormSelect>
        <FormSelect name="serialNumbID" title="VR accessory" isDisabled>
          <SelectOption value="" isSelected>{selectedMaintenance.vraName}</SelectOption>
        </FormSelect>
        <FormSelect name="issueID" title="Issue" isDisabled>
          <SelectOption value="" isSelected>{selectedMaintenance.reportedIssue}</SelectOption>
        </FormSelect>
      </div>
      
      <h3 class="text-xl dark:text-white  font-semibold mb-4">Employee Information</h3>
      
      <div class="flex flex-wrap gap-4">
        <FormSelect name="empCURP" isDisabled title="Employee">
          <SelectOption value="" isSelected>{selectedMaintenance.employeeName}</SelectOption>
        </FormSelect>
      </div>
      
      <slot/>

  }
</Form>


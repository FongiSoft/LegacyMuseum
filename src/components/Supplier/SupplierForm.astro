---
import Form from "@components/ui/Forms/Form.astro";
import FormInput from "@components/ui/Forms/FormInput.astro"
import FormSelect from "@components/ui/Forms/FormSelect.astro";
import SelectOption from "@components/ui/Forms/SelectOption.astro";
import { convertSuppliersDataToJSON } from "@functions/ConvertSuppliersDataToJSON";
import { convertStatusDataToJSON } from "@functions/ConvertSuppliersDataToJSON";
import { convertLegalDataToJSON } from "@functions/ConvertSuppliersDataToJSON";
import { convertAdressesDataToJSON } from "@functions/ConvertSuppliersDataToJSON";
import { turso } from "src/turso";

const path = Astro.url.pathname.replace(/\/$/, ""); // Elimina el "/" al final si existe.
const previousPath = path.substring(0, path.lastIndexOf("/")) || "/";



interface Props {
  selectedSupplier?: any;
}

const {selectedSupplier} = Astro.props;

let supplierID = "";
let addressID = "";
let souvenirData;
let result;
let resultLegal;
let legalData;
let resultStatus;
let StatusData;
let addressesData;
let resultAddresses;

legalData = await turso.execute("SELECT * FROM LegalEntities")

StatusData = await turso.execute(`
  SELECT * 
  FROM Status 
  WHERE statusName IN ('Alta')
`);

souvenirData = await turso.execute("SELECT * FROM Souvenirs")

addressesData = await turso.execute('SELECT * FROM Addresses')

const data = souvenirData.toJSON()

if (!selectedSupplier) {
  result = convertSuppliersDataToJSON(data)
  resultLegal = convertLegalDataToJSON(legalData.toJSON())
  resultStatus = convertStatusDataToJSON(StatusData.toJSON())
  resultAddresses = convertAdressesDataToJSON(addressesData.toJSON())
}
else  {
  result = convertSuppliersDataToJSON(data).filter((p) => p.supplierID !== selectedSupplier.supplierID); 
  resultLegal = convertLegalDataToJSON(legalData.toJSON()).filter((l) => l.legalEntityID  !== selectedSupplier.legalEntityID ); 
  resultStatus = convertStatusDataToJSON(StatusData.toJSON()).filter((s) => s.statusID  !== selectedSupplier.statusID ); 
  resultAddresses = convertAdressesDataToJSON(addressesData.toJSON()).filter((a) => a.addressID !== selectedSupplier.addressID );
}

---

<Form title="Alta Proveedores">
  {
    !selectedSupplier
    ?
    <div class="grid grid-cols-2 gap-4">

      <!-- Primera columna -->
      <div class="flex flex-col">
        <!-- Id Proveedor -->
        <FormInput type="number" name="supplierID" title="idSupplier" placeholder={supplierID} isRequired isDisabled/>
        <!-- Campo oculto para supplierID -->
        <input type="hidden" name="supplierID" value={supplierID} />

        <!-- Id Entidad Legal -->
        <FormSelect name="legalEntityID" title="Entidad legal" isRequired >
          <SelectOption value="" isSelected> -- Selecciona -- </SelectOption>
          {resultLegal?.map((w) => (
            <SelectOption value={w.legalEntityID?.toString() ?? ''}>{w.name }</SelectOption>
          ))}
        </FormSelect>

        <!-- Número de teléfono -->
        <FormInput type="text" name="phoneNumber" title="Número de Teléfono" placeholder="Número de Teléfono" isRequired/>

        <!-- Correo electrónico -->
        <FormInput type="email" name="email" title="Correo Electrónico" placeholder="email" isRequired/>

        <!-- Id Dirección -->
        <FormInput type="number" name="addressID" title="ID Dirección"  placeholder={addressID} isDisabled/>
        <!-- Campo oculto para addressID -->
        <input type="hidden" name="addressID" value={addressID} />
        <FormInput type="text" name="street" title="Calle" placeholder="Calle" isRequired/>
      </div>

      <!-- Segunda columna -->
      <div class="flex flex-col">
        <!-- Dirección -->
        <FormInput type="text" name="city" title="Ciudad" placeholder="Ciudad" isRequired/>

        <!-- Código Postal -->
        <FormInput type="text" name="postalCode" title="Código Postal" placeholder="Código Postal" isRequired/>
        
        <!-- Número Exterior -->
        <FormInput type="text" name="outsideNumb" title="Número Exterior" placeholder="Número Exterior" isRequired/>

        <!-- Estado -->
        <FormInput type="text" name="neighborhood" title="Colonia" placeholder="Colonia" isRequired/>
        <FormInput type="text" name="state" title="Estado" placeholder="Estado" isRequired/>
        <FormInput type="text" name="country" title="País" placeholder="País" isRequired/>
      </div>

      <!-- Status -->
      <FormSelect name="statusID" title="Status" isRequired>
        <SelectOption value="" isSelected> -- Selecciona -- </SelectOption>
        {resultStatus?.map((w) => (
          <SelectOption value={w.statusID?.toString() ?? ''}>{w.statusName}</SelectOption>
        ))}
      </FormSelect>
    </div>

    <slot/>
  :

    <!-- Edit -->

    <div class="grid grid-cols-2 gap-4">
      
      <!-- Primera columna -->
      <div class="flex flex-col">
        <!-- Id Proveedor -->
        <FormInput type="number" name="supplierID" title="idSupplier" placeholder="ID Supplier" value={selectedSupplier.supplierID} isDisabled/>
        <!-- Campo oculto para supplierID -->
        <input type="hidden" name="supplierID" value={selectedSupplier.supplierID} />

        <!-- Id Entidad Legal -->
        <FormSelect name="legalEntityID" title="Entidad Legal" >
          <SelectOption value="" isSelected> -- Selecciona -- </SelectOption>
          {resultLegal?.map((w) => (
            <SelectOption value={w.legalEntityID?.toString() ?? ''}>{w.name }</SelectOption>
          ))}
        </FormSelect>

        <!-- Número de telefono -->
        <FormInput type="text" name="phoneNumber" title="phoneNumber" placeholder="Número de telefono" />

        <!-- Correo electrónico -->
        <FormInput type="email" name="Email" title="Correo Electrónico" placeholder="Email" value={selectedSupplier.Email} />

        <!-- Id Dirección -->
        <FormInput type="number" name="addressID" title="ID Dirección" placeholder={addressID} value={selectedSupplier.addressID} isDisabled/>
        <!-- Campo oculto para addressID -->
        <input type="hidden" name="addressID" value={selectedSupplier.addressID} />

        <!-- Dirección -->
        <FormInput type="text" name="street" title="Calle" placeholder="Calle" value={selectedSupplier.street} />
      </div>

      <!-- Segunda columna -->
      <div class="flex flex-col">
        <FormInput type="text" name="city" title="Ciudad" placeholder="Ciudad" value={selectedSupplier.city} />

        <!-- Código Postal -->
        <FormInput type="text" name="postalCode" title="Código Postal" placeholder="Código Postal" value={selectedSupplier.postalCode} />
        
        <!-- Número Exterior -->
        <FormInput type="text" name="outsideNumb" title="Número Exterior" placeholder="Número Exterior" value={selectedSupplier.outsideNumb} />

        <!-- Estado -->
        <FormInput type="text" name="neighborhood" title="Colonia" placeholder="Colonia" value={selectedSupplier.neighborhood } />
        <FormInput type="text" name="state" title="Estado" placeholder="Estado" value={selectedSupplier.state} />
        <FormInput type="text" name="country" title="País" placeholder="País" value={selectedSupplier.country} />
      </div>

      <!-- Id Status -->
      <FormSelect name="statusID" title="Status">
        <SelectOption value="" isSelected> -- Selecciona -- </SelectOption>
        {resultStatus?.map((w) => (
          <SelectOption value={w.statusID?.toString() ?? ''}>{w.statusName}</SelectOption>
        ))}
      </FormSelect>
    </div>

    <slot/>
  }
</Form>

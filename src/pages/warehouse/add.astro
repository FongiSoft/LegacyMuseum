---
import BackBtn from "@components/ui/Buttons/BackBtn.astro";
import Layout from "../../layouts/Layout.astro";
import { turso } from '../../turso';
import SubmitBtn from "@components/ui/Buttons/SubmitBtn.astro";

type Status = {
  statusID: number;
  statusName: string;
};

// Fetch the statuses for the dropdown
const statusResult = await turso.execute('SELECT statusID, statusName FROM Status');
if (!statusResult.rows || statusResult.rows.length === 0) {
  throw new Error("No statuses found in the database.");
}

const statuses: Status[] = statusResult.rows.map((row: any) => ({
  statusID: row.statusID,
  statusName: row.statusName,
}));

// Handle form submission
if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const warehouseID = formData.get('warehouseID');
  const warehouseName = formData.get('warehouseName');
  const categoryID = formData.get('categoryID');
  const dimensions = formData.get('dimensions');
  const capacity = formData.get('capacity');
  const temperature = formData.get('temperature');
  const description = formData.get('description');
  const statusID = formData.get('statusID');

  if (!warehouseID || !warehouseName || !statusID) {
    throw new Error("Missing required fields.");
  }

  await turso.execute(`
    INSERT INTO Warehouses (warehouseID, warehouseName, categoryID, dimensions, capacity, temperature, description, statusID) 
    VALUES (${warehouseID}, '${warehouseName}', ${categoryID || 'NULL'}, ${dimensions || 'NULL'}, ${capacity || 'NULL'}, ${temperature || 'NULL'}, '${description}', ${statusID})
  `);

  return Astro.redirect('/warehouse');
}
---
<Layout title="Dashboard">
  <div class="max-w-6xl mx-auto mt-12 p-8 bg-gray-800 rounded-lg shadow-md">
    <h1 class="text-3xl font-semibold text-white mb-6">Add Warehouse</h1>
    
    <form class="grid grid-cols-2 gap-6" method="POST">
      
      <div class="col-span-2">
        <label for="warehouse-id" class="block text-sm font-medium text-white">Warehouse ID <span class="text-red-500">*</span></label>
        <input type="number" id="warehouse-id" name="warehouseID" class="mt-1 block w-full px-3 py-2 bg-gray-700 text-white rounded-md focus:ring focus:ring-blue-500" placeholder="Int(10)" required />
      </div>

      <div>
        <label for="warehouse-name" class="block text-sm font-medium text-white">Name <span class="text-red-500">*</span></label>
        <input type="text" id="warehouse-name" name="warehouseName" class="mt-1 block w-full px-3 py-2 bg-gray-700 text-white rounded-md focus:ring focus:ring-blue-500" placeholder="S(70)" required />
      </div>
      
      <div>
        <label for="category" class="block text-sm font-medium text-white">Category <span class="text-red-500">*</span></label>
        <select id="category" name="categoryID" class="mt-1 block w-full px-3 py-2 bg-gray-700 text-white rounded-md focus:ring focus:ring-blue-500" required>
          <option value="" disabled selected>Select a category</option>
          <option value="1">Souvernirs</option>
          <option value="2">Accesorios de realidad virtual</option>
          <option value="3">Comida</option>
        </select>
      </div>

      <div>
        <label for="dimensions" class="block text-sm font-medium text-white">Dimensions</label>
        <input type="number" step="0.01" id="dimensions" name="dimensions" class="mt-1 block w-full px-3 py-2 bg-gray-700 text-white rounded-md focus:ring focus:ring-blue-500" placeholder="Decimal(10,2)" />
      </div>

      <div>
        <label for="capacity" class="block text-sm font-medium text-white">Capacity</label>
        <input type="number" id="capacity" name="capacity" class="mt-1 block w-full px-3 py-2 bg-gray-700 text-white rounded-md focus:ring focus:ring-blue-500" placeholder="Int" />
      </div>

      <div>
        <label for="temperature" class="block text-sm font-medium text-white">Temperature</label>
        <input type="number" step="0.01" id="temperature" name="temperature" class="mt-1 block w-full px-3 py-2 bg-gray-700 text-white rounded-md focus:ring focus:ring-blue-500" placeholder="Decimal(5,2)" />
      </div>

      <div class="col-span-2">
        <label for="description" class="block text-sm font-medium text-white">Description <span class="text-red-500">*</span></label>
        <input type="text" id="description" name="description" class="mt-1 block w-full px-3 py-2 bg-gray-700 text-white rounded-md focus:ring focus:ring-blue-500" placeholder="S(150)" required />
      </div>

      <div>
        <label for="status" class="block text-sm font-medium text-white">Status <span class="text-red-500">*</span></label>
        <select id="status" name="statusID" class="mt-1 block w-full px-3 py-2 bg-gray-700 text-white rounded-md focus:ring focus:ring-blue-500" required>
          <option value="" disabled selected>Select a status</option>
          {statuses.map((status: Status) => (
            <option value={status.statusID}>
              {status.statusName}
            </option>
          ))}          
        </select>
      </div>
      
      <div class="col-span-2 flex justify-end space-x-2">
        <BackBtn>
          Back
        </BackBtn>
        <SubmitBtn>
          Add
        </SubmitBtn>
      </div>
    </form>
  </div>
</Layout>

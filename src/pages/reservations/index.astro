---
import Layout from "../../layouts/Layout.astro";
import TrashIcon from "../../components/ui/icons/TrashIcon.astro"
import EditIcon from "../../components/ui/icons/EditIcon.astro"
import EditRecord from "../../components/ui/Tables/EditRecord.astro";
import AddRegisterBtn from "../../components/ui/Buttons/AddRegisterBtn.astro";
import convertReservationDataToJSON  from "@functions/ConvertDataToJSON"
import { turso } from "src/turso";
import BackBtn from "@components/ui/Buttons/BackBtn.astro";

// Realiza la consulta a la tabla Reservations
const rows  = await turso.execute(`SELECT 
    r.reservationID,
    r.customerID,
    c.firstName,
    c.paternalLastName,
    c.maternalLastName,
    r.quantity,
    r.paymentMethodID,
    r.reservationDate,
    s.statusName,
    r.statusID,
    r.total
FROM Reservations r
INNER JOIN Customers c ON r.customerID = c.customerID
INNER JOIN Status s ON r.statusID = s.statusID
ORDER BY r.reservationDate DESC;`);

// Debug: Imprimir la estructura de los datos
console.log('Raw query result:', rows);

const data = rows.toJSON();
console.log('JSON data:', data);

const result = convertReservationDataToJSON(data);
console.log('Converted result:', result);
---

<Layout title="Reservations">
  <div class="max-w-screen-xl mx-auto px-4 md:px-8">
    <div class="items-start justify-between md:flex">
      <div class="max-w-lg">
        <h3 class="text-gray-800 text-xl font-bold sm:text-2xl dark:text-gray-300">
          Reservation Records
        </h3>
      </div>
      <div class="mt-3 md:mt-0">
        <AddRegisterBtn/>
      </div>
    </div>
    <div class="mt-6 shadow-sm border rounded-lg overflow-x-auto">
      <table class="w-full table-auto text-sm text-left">
        <thead class="dark:bg-gray-400/20 dark:text-white bg-gray-50 text-gray-600 font-medium border-b">
          <tr>
            <th class="py-3 px-6">Customer</th>
            <th class="py-3 px-6">Quantity</th>
            <th class="py-3 px-6">Status</th>
            <th class="py-3 px-6">Reservation Date</th>
            <th class="py-3 px-6">Total</th>
            <th class="py-3 px-6">Actions</th>
          </tr>
        </thead>
        <tbody class="text-gray-600 divide-y">
          {
            result.map((item) => (
              <tr>                
                <td class="px-6 py-4 whitespace-nowrap dark:text-white">
                  {/* Mostrar nombre completo si est√° disponible, sino mostrar ID */}
                  {item.customerName || `Customer ID: ${item.customerID}`}
                </td>
                <td class="px-6 py-4 whitespace-nowrap dark:text-white">{item.quantity}</td>
                <td class="px-6 py-4 whitespace-nowrap dark:text-white capitalize">
                  <span class={`px-2 py-1 rounded-full text-sm ${
                  item.status === 'confirmed' ? 'bg-green-100 text-green-800' :
                  item.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :
                  'bg-red-100 text-red-800'
                }`}>
                  {item.status}
                </span>
                </td>
                <td class="px-6 py-4 whitespace-nowrap dark:text-white">{item.reservationDate}</td>
                <td class="px-6 py-4 whitespace-nowrap dark:text-white">{item.total}</td>
                <td class="flex items-center justify-center gap-4 m-2 text-right px-6 whitespace-nowrap">
                  <EditRecord href={`/reservations/${item.reservationID}`}>
                    <EditIcon />
                  </EditRecord>
                  <a
                    href={`/reservations/delete?reservationID=${item.reservationID}`}
                    class="py-2 px-3 inline-block text-white duration-150 font-medium bg-red-600 rounded-lg hover:bg-red-500 active:bg-red-700 md:text-sm"
                  >
                    <TrashIcon/>
                  </a>
                </td>
              </tr>
            ))
          }
        </tbody>
      </table>
    </div>
  </div>
</Layout>
